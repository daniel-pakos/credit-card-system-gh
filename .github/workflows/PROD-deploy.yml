name: Production - Deploy

on: 
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  prod-deploy:
    environment: production
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x]
    env:
        CCAPI_REDIS_PORT: ${{ vars.CCAPI_REDIS_PORT }}
        CCAPI_APP_PORT: ${{ vars.CAPI_APP_PORT }}
        NODE_ENV: ${{ vars.CCAPI_NODE_ENV }}
        LOG_LEVEL: ${{ vars.CCAPI_LOG_LEVEL }}
        CCGUI_API_URL: ${{ vars.CCGUI_API_URL }}
        CCGUI_APP_PORT: ${{ vars.CCGUI_APP_PORT }}
        CCAPI_ECR_URL: ${{ vars.CCAPI_IMAGE_REGISTRY_URL }}
        AWS_ACCESS_KEY_ID: ${{ vars.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_DEFAULT_REGION: ${{ vars.AWS_DEFAULT_REGION }}
    steps:
      - uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Setup node
        uses: actions/setup-node@master
        with:
          node-version: ${{ matrix.node-version }}

      - name: Prepare
        run: |
          touch .env
          curl -L https://raw.githubusercontent.com/docker/compose-cli/main/scripts/install/install_linux.sh | sh
          npm install -g turbo

      - name: Install deps
        run: npm ci --include=dev

      - name: Lint
        run: npm run lint

      - name: Test
        run: npm run test

      - name: Build
        run: make prod-build

      - name: Push image
        run: |
          aws ecr get-login-password --region ${AWS_DEFAULT_REGION} | docker login --username AWS --password-stdin ${CCAPI_IMAGE_REGISTRY_URL}
          make prod-push

      - name: Deploy
        run: |
          make create-deploy-context 
          make prod-deploy
 